import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { getAuthFromCookies } from "@/lib/auth";
import TopHeader from "@/components/TopHeader";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

type AuthShape = { role?: string; userCode?: string } | null;

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  // RootLayout is a Server Component; await async cookies API
  let auth: AuthShape = null;
  try {
    auth = await getAuthFromCookies();
  } catch {
    auth = null;
  }
  return (
    <html lang="en" suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <TopHeader loggedIn={Boolean(auth)} />
        <main>
          {children}
        </main>
      </body>
    </html>
  );
}
